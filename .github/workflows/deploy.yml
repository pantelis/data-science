name: deploy

on:
  # Trigger the workflow on push to main branch
  push:
    branches:
      - main

jobs:
  build-and-deploy-book:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.AIML_COMMON_CICD_TOKEN }}
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.4.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      
      - uses: snok/install-poetry@v1
      - run: poetry config installer.modern-installation false  

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      # - name: Install project
      #   run: poetry install --no-interaction
      #----------------------------------------------
      #              Build the book 
      #----------------------------------------------      
      - name: Build the book
        shell: bash -l {0}
        run: |
          source .venv/bin/activate
          poetry run jupyter-book build data_science

    # Deploy the book's HTML to gh-pages branch
      - name: GitHub Pages action
        uses: peaceiris/actions-gh-pages@v3.6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: data_science/_build/html    
          
